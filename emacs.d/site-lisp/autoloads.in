;;;;; -*-emacs-lisp-*-

;;; Function to generate autoloads
(eval-when-compile
  (require 'cl)
  (require 'autoload))

(defun generate-autoloads ()
  (setf generated-autoload-file (pop command-line-args-left))
  (batch-update-autoloads))

;;; Set up `load-path' so these autoloads make sense.
(let* ((this-file (or load-file-name (buffer-file-name)))
       (this-dir (file-name-directory this-file))
       (non-hidden (rx bos (not (in ".")))))
  (dolist (subdir (directory-files this-dir 'full non-hidden))
    (when (file-directory-p subdir)
      (add-to-list 'load-path subdir))))

;;; Manually created autoloads for `site-lisp/tools'

;;; Manually created autoloads for `site-lisp/modes'

(autoload 'applescript-mode "applescript-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".applescript" eos) 'applescript-mode))

(autoload 'fs-mode "f-script-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".fs" (? "cript") eos) 'fs-mode))

(autoload 'gambit-inferior-mode "gambit" "Hook Gambit mode into cmuscheme.")
(autoload 'gambit-mode "gambit" "Hook Gambit mode into scheme.")

(autoload 'google-set-c-style "google-c-style" nil t)
(autoload 'google-make-newline-indent "google-c-style" nil t)

(autoload 'io-mode "io-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".io" eos) 'io-mode))

(autoload 'maude-mode "maude-mode2" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".maude" eos) 'maude-mode))

(autoload 'pod-mode "pod-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".pod" eos) 'pod-mode))

(autoload 'rdoc-mode "rdoc-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".rd" (? "oc") eos) 'rdoc-mode))

(autoload 'scheme-complete-or-indent "scheme-complete-0.8.9" nil t)
(autoload 'scheme-smart-complete "scheme-complete-0.8.9" nil t)
(autoload 'scheme-smart-indent-function "scheme-complete-0.8.9")
(autoload 'scheme-get-current-symbol-info "scheme-complete-0.8.9")

(autoload 'scheme48-mode "scheme48" nil t)

;;; Manually created autoloads for `site-lisp/extras'

(autoload 'iedit-mode "iedit" nil t)

(autoload 'indent-tabs-maybe "indent-tabs-maybe")

(autoload 'paredit-mode "paredit-21" nil t)
(autoload 'enable-paredit-mode "paredit-21" nil t)

(autoload 'undo "redo" nil t)
(autoload 'redo "redo" nil t)

;;; Generated autoloads (made by autoload.el)

