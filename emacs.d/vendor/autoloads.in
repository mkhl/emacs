;;;;; -*-emacs-lisp-*-

;;; Function to generate autoloads
(eval-when-compile
  (require 'cl)
  (require 'autoload))

(defun generate-autoloads ()
  (setf generated-autoload-file (pop command-line-args-left))
  (batch-update-autoloads))

;;; Set up `load-path' so these autoloads make sense.
(let* ((this-file (or load-file-name (buffer-file-name)))
       (this-dir (file-name-directory this-file))
       (non-hidden (rx bos (not (in ".")))))
  (dolist (subdir (directory-files this-dir 'full non-hidden))
    (when (file-directory-p subdir)
      (add-to-list 'load-path subdir))))

;;; Manually created autoloads for `vendor' packages

(autoload 'gitsum "gitsum" nil t)

(autoload 'magit-status "magit" nil t)

(autoload 'markdown "markdown-mode" nil t)
(autoload 'markdown-preview "markdown-mode" nil t)
(autoload 'markdown-mode "markdown-mode" nil t)
(let ((regexp (rx ".m" (| (: (? "ark") "down") (: "d" (? "own")) "kdn") eos)))
  (add-to-list 'auto-mode-alist (cons regexp 'markdown-mode)))

(autoload 'pysmell-mode "pysmell" nil t)

(autoload 'regex-tool "regex-tool" nil t)

(autoload 'treetop-mode "treetop-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".treetop" eos) 'treetop-mode))

(autoload 'yaml-mode "yaml-mode" nil t)
(add-to-list 'auto-mode-alist (cons (rx ".y" (? "a") "ml" eos) 'yaml-mode))

;;; Generated autoloads (made by autoload.el)

