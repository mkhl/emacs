
(setq ibuffer-default-sorting-mode 'alphabetic
      ibuffer-never-show-predicates (list (rx bos "*Completions*" eos))
      ibuffer-show-empty-filter-groups nil)

(defun mk/ibuffer-mode-hook ()
  (ibuffer-switch-to-saved-filter-groups "mkhl"))

(defun mk/setup-ibuffer ()
  (setq ibuffer-saved-filter-groups
        `(("mkhl"
           ("Emacs" (or (name . ,(rx bos "*scratch*" eos))
                        (name . ,(rx bos "*Messages*" eos))
                        (name . ,(rx bos "*Completions*" eos))
                        (name . ,(rx bos "*Ido Completions*" eos))
                        (name . ,(rx bos "*Backtrace*" eos))
                        (name . ,(rx bos "*Compile-Log*" eos))
                        (name . ,(rx bos "*Shell Command Output*" eos))
                        (name . ,(rx bos "*Kill Ring*" eos))))
           ("Custom" (name . ,(rx bos "*Customize" word-boundary)))
           ("Help" (or (mode . help-mode)
                       (mode . apropos-mode)
                       (mode . Info-mode)
                       (mode . Man-mode)
                       (mode . woman-mode)
                       (name . ,(rx bos "*WoMan-Log*" eos))))
           ("Calculator" (or (mode . calc-mode)
                             (mode . calc-trail-mode)))
           ("Packaging" (or (name . ,(rx bos "*Packages*"))
                            (name . ,(rx bos "*Package Info*"))))
           ("Version Control" (or (name . ,(rx bos "*magit" word-boundary))
                                  (name . ,(rx bos "*gitsum" word-boundary))
                                  (name . ,(rx bos "*darcsum" word-boundary))
                                  (mode . vc-mode)
                                  (mode . vc-dir-mode)
                                  (name . ,(rx bos "*vc*" word-boundary))
                                  (name . ,(rx bos "*vc-dir*" word-boundary))
                                  (name . ,(rx bos "*vc-diff*" word-boundary))
                                  (name . ,(rx bos "*Vc-Log*" word-boundary))))
           ("Proof General" (or (name . ,(rx bos "*Proof General Welcome*" eos))
                                (name . ,(rx bos "*Quail Completions*" eos))
                                (mode . isar-shell-mode)
                                (mode . isar-goals-mode)
                                (mode . isar-response-mode)))
           ("Slime Internal" (or (name . ,(rx bos "*slime" word-boundary))
                                 (name . ,(rx bos "*SLIME" word-boundary))
                                 (name . ,(rx bos "*inferior-lisp*"))))
           ("Fuel Internal" (or (name . ,(rx bos "*fuel messages*"))
                                (name . ,(rx bos "*fuel listener*"))))
           ("Search" (or (mode . occur-mode)
                         (mode . grep-mode)
                         (mode . igrep-mode)
                         (mode . ack-mode)))
           ("Shell" (or (mode . eshell-mode)
                        (mode . shell-mode)))
           ("Dired" (or (mode . dired-mode)
                        (name . ,(rx bos "*Dired log*"))))
           ("Isabelle" (mode . isar-mode))
           ("Slime" (mode . lisp-mode))
           ("Fuel" (mode . factor-mode))
           ("Org" (or (mode . org-mode)
                      (mode . calendar-mode)))
           ("Unknown" (mode . fundamental-mode)))))
  (define-key ibuffer-mode-map (kbd "TAB") #'ibuffer-toggle-filter-group)
  (add-hook 'ibuffer-mode-hook 'mk/ibuffer-mode-hook))

(eval-after-load 'ibuffer
  '(mk/setup-ibuffer))
